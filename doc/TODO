
easy
----
fixing various non-null-terminated bugs (supposedly one in cmdman).
	update: i checked cmdman and couldn't find any problems. mgb: where
	did you see these kind of problems?

unknown packet logging.


moderate
--------
points_goal
  be sure to keep track of the freq at the time the ball was fired, not
  at the time the goal is scored.

lag handling

better pre-processor for config

banners

locking. lots of options here:
	lock to freq
	lock to ship
	lock only certain people
	finite "lives" also fits in here
	must be able to be controlled by mod commands and other modules

allow commands to be targeted to specific freqs (using nmefreq
messages). this probably requires changes to the command interface.

the config manager has to monitor config files for changes. it also
needs some interface to inform clients when changes occur. there should
be sufficiently fine granularity that the whole server doesn't need to
stop and re-read settings every time someone touches a file, but it
shouldn't be so fine that it's a pain in the ass to use.

the config manager also needs a way to change settings in memory AND
also write those updates back to disk, so that they aren't lost in a
recycle or crash.

fix flag drops at edges

fix brick drop algorithm (it should snap to edges of other bricks)


hard
----
"rotating" packet structure: a grouped packet full of rels should become
a single rel packet containing a group of unrels. the tricks here is
to remove the individual packets that get grouped and add the new one to
the outlist.

tinyscheme/python/other-random-language interface


currently broken
----------------
turret kicking

ball sync?


misc
----
arenas:
*go command

balls:
region-based goals. 3/6-team ball games.
let ball speccer see info of person carrying ball.
multiple-point goals based on distance

treat nme bricks as tiles for the purposes of dropping bricks

bandwidth:
prioritized position/weapons based on distance


discarded ideas
---------------
sort data entries by key so matching keys on read is faster
   even if there are 20 types of persistant data (which I don't even
   expect), linear search is fast enough.

implement the suggestion that other arenas only have to supply settings
that override main arena's. this has potentially large consequences.
	a better idea is to have those arenas #include config files from the
	default. this gives people better control at the expense of a tiny
	bit more work. and i've now improved include to allow relative
	paths, so it should be even easier.

