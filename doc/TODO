
easy
----
too many shipchanges detection

chat flooding detection


moderate
--------
lag handling

locking. lots of options here:
	lock to freq
	lock to ship
	lock only certain people
	finite "lives" also fits in here
	must be able to be controlled by mod commands and other modules

fix flag drops at edges

fix brick drop algorithm (it should snap to edges of other bricks)

allow sharing and cacheing of compressed .lvl's and .lvz's between
arenas.


hard
----
"rotating" packet structure: a grouped packet full of rels should become
a single rel packet containing a group of unrels. the tricks here is
to remove the individual packets that get grouped and add the new one to
the outlist.

tinyscheme/python/other-random-language interface


currently broken
----------------
turret kicking

ball sync?


misc
----
arenas:
*go command

balls:
region-based goals. 3/6-team ball games.
let ball speccer see info of person carrying ball.
multiple-point goals based on distance

treat nme bricks as tiles for the purposes of dropping bricks

bandwidth:
prioritized position/weapons based on distance

simple chat protocol
	should be ascii based over tcp
	maybe telnet-able?
	maybe irc-based?
	possible complications:
		at some point, we're going to have to translate between "ss
		protocol" and whatever text-based protocol. where should it be
		done? maybe it shouldn't be done at all, and alternative
		protocols shouldn't be treated as "2nd class". then how do
		modules that handle packets know how to handle new protocols?
		each player could have a pointer to a Iprotocol interface, which
		would handle the protocol-level details. what is the proper
		level for the protocol interface? higher than packet structure,
		but where?

