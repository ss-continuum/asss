
add callbacks:

	#define CB_TURRET "playerturret"
	typedef void (*PlayerTurret)(Arena *arena, Player *p, int old_attach);
	//p->p_attached determines attachment/detachment
	//p->p_attached == PID_NONE if detach
	//in the case of detachment, old_attach will be the pid of the player detached from

	//in koth.h
	#define CB_KOTH "koth"
	typedef void (*KothWin)(Arena *arena, LinkedList *winners, int points);
	//the linklist is the one in check_koth(), a list of players that receive KOTH reward

fix CMD handling, and change ccc to use CMD again.

dr brain: Purge+ wanted me to ask that you add groupids to billing_ssc.
Looks like you just need to change one line (line 933 as of 1.3.6).

consider making cfghelp dynamic:
	parse out cfghelp sections for each .c file in the build rule for
	.o, compile the output separately and somehow link it in to the .o,
	as a symbol named "<modname>_cfghelp". then, in cmod, look for that
	symbol name, and pass it to cfghelp somehow.

	what about python?

KaasAap: Maybe this would be a good thing to change for ccc: the
variable 'myfreq' won't be updated when user changes frequency with '=#'
(somewhere at line 1092).

make chatnet send NOOPs after three minutes of no traffic in either
direction, not just s2c.

add GetRandomPointInRegion to mapdata for dr brain.

add time-related functions to python.

add mutiple spawn locations for balls.

write fg_ctf:
	00:14:45 [----] chambahs:
	theres 2 flag locations, freq 0's flag should be placed at 381, 375,
	freq 1's flag should be placed at 646, 642. same spots to where the freq
	has to bring the enemy flag to for them to "capture" the flag, when a
	player dies with the enemy flag, its nueted, if a player from the flag's
	freq touches it, its returned to their base, if a fellow teamate touches
	it, they have possesion and can continue bringing the flag back to their
	base, 100 points to the entire team for each flag captured, 100 EXTRA
	points to the player who captured it, 10k points to the team who gets 5
	captures first.
	also, make sure when a player holding a flag ports or warps, they are
	shipresetted, also, if they enter a region on the map that i set, they
	should be shipresetted also.
	10 second delay in between games, when a game starts, shipreset and
	#prize 7 (warp) players.
	when a player touches the enemy flag to bring it back to their base send
	an arena message of "(name):(Freq) has captured (freq's) flag"
	and when the player bring it back to their base, send an arena message
	of "(name):(freq) has scored a point for their freq"
	when freq 0 wins, do ?objon 1, and when freq 1 wins, do ?objon 2.

make *setship, *setfreq use the freq manager.

Dr Brain: and my own personal gripe: recursive #includes aren't relative
to the included file. So if I have arenas/(public)/arena.conf include
flags.conf, and have some other arena include (public)'s arena.conf, it
won't be able to find flags.conf. The workaround is to use absolute
paths for everything, but that's cumbersome if you ever want to move
configs around (and I frequently do)

Dr Brain: Ok, another request: some way to increment the weapon packet
count for a player. I need this because I send fake weapon packets to
individual players and Smong brought to my attention that it ruins the
weapon packetloss tracking. I think a Igame function would work best.
Something like game->IncrementWeaponPacketCount(Player *p);

Dr Brain: another suggestion: where there are no quickfix results, don't
send the empty file to be ignored by the client. instead, give a message
saying there were no results

tcp biller protocol changes:
	add port to CONNECT?
	add timezone to PLOGIN

	smong: CONNECTBAD:swname:billername:reason, billing.c doesn't seem to
	match this. billing.c just uses 'CONNECTBAD:swname:reason'. this is from
	the 140 windows distro

stag> you need a list of arena variables "new" to asss
stag> sort ?lsmod output by name

flagcore:
	record support for flagcore!
	write more flag game modules:
		fg_pacman
	write map rotator
	region-based base stats for flag games (should wait on new flags module)

expose brickwrite as an interface?

add logging for module unloading?

python stuff:
	structs:
		add read-only support for strings?

	clean up the code

more developer docs!

possible better way of authenticating cross-arena commands:
	add HasCapabilityIn(Player *p, Arena *a, const char *cap) to capman.
	for a cross-arena command, check if p has privcmd_foo in target->arena.
	where else might this be useful?

objects.c:645: remove duplication of code from mapnewsdl.c

work on bw limiting a little more:
	use unrel ploss stats to reduce limit?

fixed goal points?

add more event types to loadgen.

07:03:12 [----] Dr Brain:
It would be nice to get a module that detects low player FPS and specs
them and also checks bad timing caused from speed hacks.

[11:08] [Oct 30 03:59] CypherJF: hey, issue w/ the new biller protocol
you proposed. The issue comes into play if the zone name has a : in it;
it'll create splitting issues with the : delimiter.. suggestions?

allow arenas to share compressed maps and lvzs:
	the implementation is pretty easy. let mapnewsdl keep a global hash
	table mapping lvl/lvz filenames to structs with: a refcount, a
	crc32, and a pointer to the prepared big packet. then arena structs
	can keep references to the treap nodes, and the treap counts as one
	reference too. when the refcount drops to one, you can decide
	whether to keep the thing in memory or free it. maybe mark it with a
	timestamp and then have a timer clear out things that have been
	unused in one hour (or another suitable timeout).

	complications: what about recyclearena after uploading a map? or any
	other case of the map file changing while the server is running.


recorder features:
	consider using dedicated arenas for playback, in order to solve some
	problems with flags and balls saving and restoring their regular state.
	note that all problems still can't be solved with the arena packet hook,
	since flags have state on the client. balls would probably be set with
	the APH and dedicated arenas, though, except for score annoucements. ...

	make chat pass arena messages to the chatmsg callback so recorder can
	get them. update: this will be harder than expected.

	think about brickid problem. probably best to use custom event for
	bricks so they can go through game and entering people will see them
	correctly. hmm... if we want entering people to see things correctly,
	maybe flags have to go through flag too.

	think about timing accuacy issues with ppks and others.


conf file cannonicalizer

finite lives/elimbot?

from priit:
	add max packet delay (e.g. for radar packets) so they'll tend to sit in
	the queue and be clustered more.

	make pids per-arena?! or at least make separate per-arena pids.

add customizable alert commands that go to whoever has staff in the
arena they came from.

fix lvz downloading (send all in same 0x0a packet?) (is this really
broken?)


far future:

make ! commands go to bots/?botregistercmd

file size limit on ?sendfile

better way of getting interfaces.

finish implementing new statbox system (has to wait on cont support).

make clear_*_data in stats actually free the treap for that player,
  since otherwise they'd never ever get freed.

add rpc for out-of-process modules.

ipv6 support.

priit's crazy distributed server idea (with arena servers being slaves
to a master zone server)

my crazy distributed userdb idea.


probably not happening:

add non-priv ?setgroup to allow setting group on someone who isn't
there.

multiple unrel threads. i doubt it will help performance any.

dynamically-sized per-arena data space?

